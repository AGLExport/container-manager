{
    "$schema": "https://json-schema.org/draft/2019-09/schema",
    "$id": "http://example.com/example.json",
    "type": "object",
    "default": {},
    "title": "Root Schema",
    "required": [
        "name",
        "base",
        "resource",
        "fs",
        "device",
        "network"
    ],
    "properties": {
        "name": {
            "type": "string",
            "title": "The name of guest container.",
            "description": "A name property use to identify the guest container. Must be set this property."
        },
        "role": {
            "type": "string",
            "title": "The role of guest container.",
            "description": "A role property use to identify the guest container group. If this property is not set, role is sat name automatically."
        },
        "base": {
            "type": "object",
            "title": "The base properties of guest container.",
            "description": "This properties set base configuration for guest container. Such as root file system, additional disk mount and more.",
            "required": [
                "rootfs",
                "extradisk",
                "lifecycle",
                "cap",
                "environment"
            ],
            "properties": {
                "autoboot": {
                    "type": "boolean",
                    "default": false,
                    "title": "Automatic boot.",
                    "description": "When this property is true, this guest container launch at boot time."
                },
                "bootpriority": {
                    "type": "integer",
                    "default": 1000,
                    "title": "Boot priority.",
                    "description": "Container managers launch guest container in order of priority in boot time.  0: Highest. 9999: Lowest.",
                    "minimum": 0,
                    "maximum": 9999
                },
                "rootfs": {
                    "type": "object",
                    "title": "The properties of root file system.",
                    "required": [
                        "path",
                        "filesystem",
                        "mode",
                        "blockdev"
                    ],
                    "properties": {
                        "path": {
                            "type": "string",
                            "title": "A guest root file system mount point in host.",
                            "description": "This property specify the mount point (directory).",
                            "examples": [
                                "/opt/container/guests/agl-qt-ivi-demo/rootfs"
                            ]
                        },
                        "filesystem": {
                            "type": "string",
                            "title": "A filesystem of guest root file system.",
                            "description": "A filesystem of guest root file system.  Currently tested ext4 and erofs.",
                            "enum": [
                                "erofs",
                                "ext4"
                              ]
                        },
                        "mode": {
                            "type": "string",
                            "default": "ro",
                            "title": "A mount mode for root file system.",
                            "description": "A mount mode for root file system.  Typically set ro.",
                            "enum": [
                                "ro",
                                "rw"
                              ]
                        },
                        "blockdev": {
                            "type": "array",
                            "title": "Block devices for root file system.",
                            "description": "Block devices for root file system.  This property must be set two devices.  These device select by a/b boot settings. 1st entry use at a. 2nd entry use at b.  If you want to use only one disk, shall set same device both entry.",
                            "minItems": 2,
                            "maxItems": 2,
                            "items": {
                                "type": "string",
                                "title": "Block devices.",
                                "examples": [
                                    "/dev/mmcblk1p4"
                                ]
                            }
                        }
                    },
                    "examples": [{
                        "path": "/opt/container/guests/agl-qt-ivi-demo/rootfs",
                        "filesystem": "ext4",
                        "mode": "rw",
                        "blockdev": [
                            "/dev/mmcblk1p4",
                            "/dev/mmcblk0p4"
                        ]
                    }]
                },
                "extradisk": {
                    "type": "array",
                    "title": "The extradisk setting.",
                    "description": "This array property set one or more extra disk setting.  Typically this setting use to rw disk mounting in guest rootfs directory in case of ro root file system.",
                    "items": {
                        "type": "object",
                        "title": "Extra disk setting.",
                        "required": [
                            "from",
                            "to",
                            "filesystem",
                            "mode",
                            "redundancy",
                            "blockdev"
                        ],
                        "properties": {
                            "from": {
                                "type": "string",
                                "title": "The host side mount point for extradisk.",
                                "description": "This property must be set existing host directory.",
                                "examples": [
                                    "/opt/container/guests/agl-qt-ivi-demo/nv"
                                ]
                            },
                            "to": {
                                "type": "string",
                                "title": "The guest side mount point for extradisk.",
                                "description": "This property must be set existing guest directory without top /.",
                                "examples": [
                                    "var/nonvolatile"
                                ]
                            },
                            "filesystem": {
                                "type": "string",
                                "title": "A filesystem of extra disk.",
                                "description": "A filesystem of extra disk.  Currently tested ext4 and erofs.",
                                "enum": [
                                    "erofs",
                                    "ext4"
                                ]
                            },
                            "mode": {
                                "type": "string",
                                "title": "A mount mode for extra disk.",
                                "description": "A mount mode for extra disk.",
                                "enum": [
                                    "ro",
                                    "rw"
                                ]
                            },
                            "redundancy": {
                                "type": "string",
                                "title": "A disk redundancy mode.",
                                "description": "A disk redundancy mode for extra disk.  An ab is a/b mount mode it sync root file system side.  When 1st disk mount was failed, container manager change to 2nd disk. ",
                                "enum": [
                                    "ab",
                                    "failover"
                                ]
                            },
                            "blockdev": {
                                "type": "array",
                                "title": "Block devices for extra disk.",
                                "description": "Block devices for extra disk.  This property must be set two devices.  If you want to use only one disk, shall set same device both entry.",
                                "minItems": 2,
                                "maxItems": 2,
                                    "items": {
                                    "type": "string",
                                    "title": "Block devices.",
                                    "examples": [
                                        "/dev/mmcblk1p11"
                                    ]
                                }
                            }
                        }
                    },
                    "examples": [
                        [{
                            "from": "/opt/container/guests/agl-qt-ivi-demo/nv",
                            "to": "var/nonvolatile",
                            "filesystem": "ext4",
                            "mode": "rw",
                            "redundancy": "failover",
                            "blockdev": [
                                "/dev/mmcblk1p11",
                                "/dev/mmcblk1p11"
                            ]
                        },
                        {
                            "from": "/opt/container/guests/agl-qt-ivi-demo/ext",
                            "to": "opt/ext",
                            "filesystem": "erofs",
                            "mode": "ro",
                            "redundancy": "ab",
                            "blockdev": [
                                "/dev/mmcblk1p13",
                                "/dev/mmcblk1p14"
                            ]
                        }]
                    ]
                },
                "lifecycle": {
                    "type": "object",
                    "title": "The lifecycle setting.",
                    "description": "This properties set parameter of guest container shutdown/reboot.",
                    "properties": {
                        "halt": {
                            "type": "string",
                            "default": "SIGTERM",
                            "title": "Signal setting for HALT request to guest.",
                            "description": "This signal use in shutdown request to guest.  Which signal shall use, it depend on init process of guest."
                        },
                        "reboot": {
                            "type": "string",
                            "default": "SIGTERM",
                            "title": "Signal setting for reboot request to guest.",
                            "description": "This signal use in reboot request to guest.  Which signal shall use, it depend on init process of guest."
                        },
                        "timeout": {
                            "type": "integer",
                            "default": 10000,
                            "title": "Time out for shutdown and reboot.",
                            "description": "Time out for shutdown and reboot.  This value shall set millisecond.",
                            "minimum": 0
                        }
                    },
                    "examples": [{
                        "halt": "SIGRTMIN+3",
                        "reboot": "SIGTERM",
                        "timeout": 15000
                    }]
                },
                "cap": {
                    "type": "object",
                    "default": {},
                    "title": "The Linux capabilities setting.",
                    "description": "Recommend:  Only to use drop.",
                    "required": [
                        "drop",
                        "keep"
                    ],
                    "properties": {
                        "drop": {
                            "type": "string",
                            "title": "Set drop capabilities.",
                            "description": "This properties describe capabilities that drop from container manager capabilities."
                        },
                        "keep": {
                            "type": "string",
                            "title": "Set keep capabilities.",
                            "description": "This properties describe capabilities that keep from container manager capabilities. When it include capabilities that was not have container manager, guest container can't launch."
                        }
                    },
                    "examples": [{
                        "drop": "sys_module mac_admin mac_override sys_time",
                        "keep": ""
                    }]
                },
                "environment": {
                    "type": "array",
                    "title": "Array of environment variable set on guest init.",
                    "description": "Currently not support.",
                    "items": {
                        "type": "string",
                        "title": "Environment variable."
                    },
                    "examples": [
                        [
                            "PIPEWIRE_RUNTIME_DIR=/var",
                            "HOME=/home/root"
                        ]
                    ]
                }
            },
            "examples": [{
                "autoboot": true,
                "bootpriority": 10,
                "rootfs": {
                    "path": "/opt/container/guests/agl-qt-ivi-demo/rootfs",
                    "filesystem": "ext4",
                    "mode": "rw",
                    "blockdev": [
                        "/dev/mmcblk1p4",
                        "/dev/mmcblk0p4"
                    ]
                },
                "extradisk": [{
                    "from": "/opt/container/guests/agl-qt-ivi-demo/nv",
                    "to": "var/nonvolatile",
                    "filesystem": "ext4",
                    "mode": "rw",
                    "redundancy": "failover",
                    "blockdev": [
                        "/dev/mmcblk1p11",
                        "/dev/mmcblk0p11"
                    ]
                }],
                "lifecycle": {
                    "halt": "SIGRTMIN+3",
                    "reboot": "SIGTERM",
                    "timeout": 15000
                },
                "cap": {
                    "drop": "sys_module mac_admin mac_override sys_time",
                    "keep": ""
                },
                "environment": [
                    "PIPEWIRE_RUNTIME_DIR=/var",
                    "HOME=/home/root"
                ]
            }]
        },
        "resource": {
            "type": "array",
            "title": "Array of resource control settings.",
            "description": "This properties set resource control using cgroup.",
            "items": {
                "type": "object",
                "title": "A Schema",
                "required": [
                    "type",
                    "object",
                    "value"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "The type of resource control.",
                        "description": "This properties support cgroup only. Must set cgroup"
                    },
                    "object": {
                        "type": "string",
                        "title": "The object of resource control.",
                        "description": "This properties set cgroup subsystem."
                    },
                    "value": {
                        "type": "string",
                        "title": "The value of cgroup subsystem.",
                        "description": "This properties set value for the selected cgroup subsystem."
                    }
                }
            },
            "examples": [
                [{
                    "type": "cgroup",
                    "object": "cpuset.cpus",
                    "value": "0,2-3"
                }]
            ]
        },
        "fs": {
            "type": "object",
            "title": "The file system level mount setting.",
            "description": "This properties use tmpfs mount and bind directory mount form host to guest.",
            "required": [
                "mount"
            ],
            "properties": {
                "mount": {
                    "type": "array",
                    "title": "The array of mount items.",
                    "items": {
                        "type": "object",
                        "title": "A mount item.",
                        "required": [
                            "type",
                            "from",
                            "to",
                            "fstype",
                            "option"
                        ],
                        "properties": {
                            "type": {
                                "type": "string",
                                "title": "The type of mount.",
                                "description": "When you want to mount tmpfs, this property shall be set filesystem.  When you want to mount host directory to guest directory, this property shall be set directory.",
                                "enum": [
                                    "filesystem",
                                    "directory"
                                ]
                            },
                            "from": {
                                "type": "string",
                                "title": "The property of host side mount info.",
                                "description": "When you want to mount tmpfs, this property shall be set file system name.  When you want to mount host directory to guest directory, this property shall be set host side directory."
                            },
                            "to": {
                                "type": "string",
                                "title": "The property of guest side directory.",
                                "description": "This property shall be set guest side directory without top /.",
                                "pattern": "^(dev|sys|etc|run|var|opt)",
                                "examples": [
                                    "dev/shm",
                                    "run",
                                    "sys/kernel/security",
                                    "run/udev/data",
                                    "var/display/drm-lease-manager/lease",
                                    "var/pipewire-0",
                                    "etc/systemd/system.conf.d/10-environment.conf"
                                ]
                            },
                            "fstype": {
                                "type": "string",
                                "title": "The property of filesystem type.",
                                "description": "When you want to mount tmpfs, this property shall be set tmpfs.  When you want to mount host directory to guest directory, this property shall be set none."
                            },
                            "option": {
                                "type": "string",
                                "title": "The property of mount options.",
                                "description": "The property set mount options for each mount operations.  More detail of mount options refer to example."
                            }
                        },
                        "dependencies": {
                            "type": {
                                "oneOf": [
                                    {
                                        "properties": {
                                            "type": {
                                                "enum": ["filesystem"]
                                            },
                                            "from": {
                                                "enum": [
                                                    "shm",
                                                    "tmpfs"
                                                ]
                                            },
                                            "fstype": {
                                                "enum": ["tmpfs"]
                                            }
                                        }
                                    },
                                    {
                                        "properties": {
                                            "type": {
                                                "enum": ["directory"]
                                            },
                                            "fstype": {
                                                "enum": ["none"]
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "examples": [{
                "mount": [{
                    "type": "filesystem",
                    "from": "shm",
                    "to": "/dev/shm",
                    "fstype": "tmpfs",
                    "option": "defaults 0 0"
                },
                {
                    "type": "filesystem",
                    "from": "tmpfs",
                    "to": "run",
                    "fstype": "tmpfs",
                    "option": "defaults 0 0"
                },
                {
                    "type": "directory",
                    "from": "/sys/kernel/security",
                    "to": "sys/kernel/security",
                    "fstype": "none",
                    "option": "ro,bind,optional 0 0"
                },
                {
                    "type": "directory",
                    "from": "/run/udev/data",
                    "to": "run/udev/data",
                    "fstype": "none",
                    "option": "ro,bind,optional,create=dir"
                },
                {
                    "type": "directory",
                    "from": "/run/drm-lease-manager/lease-ivi",
                    "to": "var/display/drm-lease-manager/lease",
                    "fstype": "none",
                    "option": "bind,create=file"
                },
                {
                    "type": "directory",
                    "from": "/opt/container/guests/agl-qt-ivi-demo/system.conf",
                    "to": "etc/systemd/system.conf.d/10-environment.conf",
                    "fstype": "none",
                    "option": "bind,optional,create=file"
                }]
            }]
        },
        "device": {
            "type": "object",
            "title": "The device settings.",
            "description": "This property describe device settings.",
            "required": [
                "static",
                "dynamic"
            ],
            "properties": {
                "static": {
                    "type": "array",
                    "title": "The array of static device settings.",
                    "items": {
                        "type": "object",
                        "title": "A static device item.",
                        "description": "This property set static device properties. That support device file based device, sysfs gpio and iio. Static device must be created before than container-manager start.",
                        "required": [
                            "type"
                        ],
                        "properties": {
                            "type": {
                                "type": "string",
                                "title": "The type of device.",
                                "description": "A devnode use to one by one device file setting. ex. /dev/ttyS0.  A devdir use to device file directory based setting. ex. /dev/dri.  A gpio use to sysfs gpio.  A iio use to sysfs iio with device file.",
                                "enum": ["devdir","devnode","gpio","iio"]
                            },
                            "from": {
                                "type": "string",
                                "title": "The host side device entry",
                                "description": "This property is set device file path in host in case of devnode and iio.  This property is set device file directory in host in case of devdir.  This property is set sysfs path in host in case of gpio."
                            },
                            "to": {
                                "type": "string",
                                "title": "The guest side device entry",
                                "description": "This property is set device file path in guest in case of devnode and iio.  This property is set device file directory in guest in case of devdir.  This property is set sysfs path in guest in case of gpio."
                            },
                            "devnode": {
                                "type": "string",
                                "title": "The representative device node in host.",
                                "description": "This property is set representative device file path in guest in case of devnode, devdir and iio.  This property use to automatic major/minor number scanning to allow device access.  In case of gpio, this property is not necessary."
                            },
                            "optional": {
                                "type": "integer",
                                "title": "This device is optional or not.",
                                "description": "When this property set 0, if container manager can't access this device, container manager will not launch this guest container.  When this property set 1, if container manager can't access this device, container manager will disable this device and launch this guest container.",
                                "minimum": 0,
                                "maximum": 1
                            },
                            "wideallow": {
                                "type": "integer",
                                "title": "The wide allow setting.",
                                "description": "When this property set 0, container manager set allow device access major: minor number.  When this property set 0, container manager set allow device access major: all minor number.",
                                "minimum": 0,
                                "maximum": 1
                            },
                            "exclusive": {
                                "type": "integer",
                                "title": "The exclusive setting.",
                                "description": "Currently not support.",
                                "minimum": 0,
                                "maximum": 1
                            },
                            "port": {
                                "type": "integer",
                                "title": "The gpio port.",
                                "description": "This property set gpio port number.  It use gpio only.",
                                "minimum": 0
                            },
                            "direction": {
                                "type": "string",
                                "title": "The gpio port direction.",
                                "description": "This property set gpio port direction.  It use gpio only.",
                                "enum": ["in","out","low","high"]
                            },
                            "sysfrom": {
                                "type": "string",
                                "title": "The iio device path of sysfs in host.",
                                "description": "This property set iio device sysfs path in host.  It use iio only."
                            },
                            "systo": {
                                "type": "string",
                                "title": "The iio device path of sysfs in guest.",
                                "description": "This property set iio device sysfs path in guest.  It use iio only."
                            },
                            "devfrom": {
                                "type": "string",
                                "title": "The iio device path of /dev in host.",
                                "description": "This property set iio device file path in host.  It use iio only."
                            },
                            "devto": {
                                "type": "string",
                                "title": "The iio device path of /dev in guest.",
                                "description": "This property set iio device file path in guest.  It use iio only."
                            }
                        },
                        "dependencies": {
                            "type": {
                                "oneOf": [
                                    {
                                        "required": [
                                            "type",
                                            "from",
                                            "to",
                                            "devnode",
                                            "optional",
                                            "wideallow"
                                        ],
                                        "properties": {
                                            "type": {
                                                "enum": ["devdir","devnode"]
                                            },
                                            "from": {
                                                "pattern": "/dev/"
                                            },
                                            "to": {
                                                "pattern": "dev/"
                                            },
                                            "devnode": {
                                                "pattern": "/dev/"
                                            }
                                        }
                                    },
                                    {
                                        "required": [
                                            "type",
                                            "from",
                                            "to",
                                            "port",
                                            "direction"
                                        ],
                                        "properties": {
                                            "type": {
                                                "enum": ["gpio"]
                                            },
                                            "from": {
                                                "pattern": "/sys/devices/platform"
                                            },
                                            "to": {
                                                "pattern": "sys/devices/platform"
                                            }
                                        }
                                    },
                                    {
                                        "required": [
                                            "type",
                                            "from",
                                            "to",
                                            "port",
                                            "direction"
                                        ],
                                        "properties": {
                                            "type": {
                                                "enum": ["iio"]
                                            },
                                            "fstype": {
                                                "enum": ["none"]
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        "examples": [{
                            "type": "devdir",
                            "from": "/dev/dri",
                            "to": "dev/dri",
                            "devnode": "/dev/dri/card0",
                            "optional": 0,
                            "wideallow": 1,
                            "exclusive": 0
                        },
                        {
                            "type": "devdir",
                            "from": "/dev/input",
                            "to": "dev/input",
                            "devnode": "/dev/input/event0",
                            "optional": 1,
                            "wideallow": 1,
                            "exclusive": 0
                        },
                        {
                            "type": "devnode",
                            "from": "/dev/pvr_sync",
                            "to": "dev/pvr_sync",
                            "devnode": "/dev/pvr_sync",
                            "optional": 0,
                            "wideallow": 0,
                            "exclusive": 0
                        },
                        {
                            "type": 		"gpio",
                            "port":			379,
                            "direction":	"low",
                            "from": 		"/sys/devices/platform/soc/e6055400.gpio/gpiochip6/gpio/gpio379",
                            "to":			"sys/devices/platform/soc/e6055400.gpio/gpiochip6/gpio/gpio379"
                        },
                        {
                            "type": "iio",
                            "sysfrom": "/sys/devices/platform/soc/e66d0000.i2c/i2c-3/3-006a/iio:device0/",
                            "systo": "sys/devices/platform/soc/e66d0000.i2c/i2c-3/3-006a/iio:device0/",
                            "devfrom": "/dev/iio:device0",
                            "devto": "dev/iio:device0",
                            "devnode": "/dev/iio:device0",
                            "optional": 0
                        }]
                    }
                },
                "dynamic": {
                    "type": "array",
                    "default": [],
                    "title": "The dynamic Schema",
                    "items": {
                        "type": "object",
                        "title": "A Schema",
                        "required": [
                            "devpath",
                            "subsystem",
                            "devtype",
                            "mode"
                        ],
                        "properties": {
                            "devpath": {
                                "type": "string",
                                "title": "The devpath Schema",
                                "examples": [
                                    "/devices/platform/soc/ee0a0100.usb/usb2/"
                                ]
                            },
                            "subsystem": {
                                "type": "string",
                                "title": "The subsystem Schema",
                                "examples": [
                                    "block"
                                ]
                            },
                            "devtype": {
                                "type": "string",
                                "title": "The devtype Schema",
                                "examples": [
                                    "disk",
                                    "partition"
                                ]
                            },
                            "mode": {
                                "type": "integer",
                                "title": "The mode Schema",
                                "examples": [
                                    3
                                ]
                            }
                        },
                        "examples": [{
                            "devpath": "/devices/platform/soc/ee0a0100.usb/usb2/",
                            "subsystem": "block",
                            "devtype": "disk",
                            "mode": 3
                        },
                        {
                            "devpath": "/devices/platform/soc/ee0a0100.usb/usb2/",
                            "subsystem": "block",
                            "devtype": "partition",
                            "mode": 3
                        }]
                    }
                }
            }
        },
        "network": {
            "type": "object",
            "default": {},
            "title": "The network Schema",
            "required": [
                "static"
            ],
            "properties": {
                "static": {
                    "type": "array",
                    "default": [],
                    "title": "The static Schema",
                    "items": {
                        "type": "object",
                        "default": {},
                        "title": "A Schema",
                        "required": [
                            "type",
                            "param"
                        ],
                        "properties": {
                            "type": {
                                "type": "string",
                                "default": "",
                                "title": "The type Schema",
                                "examples": [
                                    "veth"
                                ]
                            },
                            "param": {
                                "type": "object",
                                "default": {},
                                "title": "The param Schema",
                                "required": [
                                    "name",
                                    "link",
                                    "flags",
                                    "hwaddr",
                                    "mode"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "default": "",
                                        "title": "The name Schema",
                                        "examples": [
                                            "veth0"
                                        ]
                                    },
                                    "link": {
                                        "type": "string",
                                        "default": "",
                                        "title": "The link Schema",
                                        "examples": [
                                            "lxcbr0"
                                        ]
                                    },
                                    "flags": {
                                        "type": "string",
                                        "default": "",
                                        "title": "The flags Schema",
                                        "examples": [
                                            "up"
                                        ]
                                    },
                                    "hwaddr": {
                                        "type": "string",
                                        "default": "",
                                        "title": "The hwaddr Schema",
                                        "examples": [
                                            "00:16:3e:xx:xx:xx"
                                        ]
                                    },
                                    "mode": {
                                        "type": "string",
                                        "default": "",
                                        "title": "The mode Schema",
                                        "examples": [
                                            "bridge"
                                        ]
                                    }
                                },
                                "examples": [{
                                    "name": "veth0",
                                    "link": "lxcbr0",
                                    "flags": "up",
                                    "hwaddr": "00:16:3e:xx:xx:xx",
                                    "mode": "bridge"
                                }]
                            }
                        },
                        "examples": [{
                            "type": "veth",
                            "param": {
                                "name": "veth0",
                                "link": "lxcbr0",
                                "flags": "up",
                                "hwaddr": "00:16:3e:xx:xx:xx",
                                "mode": "bridge"
                            }
                        }]
                    },
                    "examples": [
                        [{
                            "type": "veth",
                            "param": {
                                "name": "veth0",
                                "link": "lxcbr0",
                                "flags": "up",
                                "hwaddr": "00:16:3e:xx:xx:xx",
                                "mode": "bridge"
                            }
                        }]
                    ]
                }
            },
            "examples": [{
                "static": [{
                    "type": "veth",
                    "param": {
                        "name": "veth0",
                        "link": "lxcbr0",
                        "flags": "up",
                        "hwaddr": "00:16:3e:xx:xx:xx",
                        "mode": "bridge"
                    }
                }]
            }]
        }
    }
}
